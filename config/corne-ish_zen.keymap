/*
*
* Copyright (c) 2021 lowprokb.ca
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define COMBO_TIMEOUT 60

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define DANGER  3

/ {
    combos {
        compatible = "zmk,combos";
        combo_danger {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <20 21 22>;
            bindings = <&tog 3>;
        };
	 combo_send {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <18 19 20>;
            bindings = <&kp LC(RET)>;
        };
	 combo_del {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <14 15 16>;
            bindings = <&kp DEL>;
        };
	 combo_printsc {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <2 3 4>;
            bindings = <&kp PSCRN>;
	 };
	 combo_esc {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <1 2 3>;
            bindings = <&kp ESC>;
	 };
	 combo_grave {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <26 27 28>;
            bindings = <&kp GRAVE>;
	};
	 combo_ctlbksp {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <7 8 9>;
            bindings = <&kp LC(BSPC)>;
        };
	 combo_bksp {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <19 20 21>;
            bindings = <&kp BSPC>;
        };
    };
};


/ {
	behaviors {

        bh: layer_taps 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Layer-Tap";
			#binding-cells = <2>;
			tapping_term_ms = <215>;
            flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
     };
   };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | 
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | 
//             | GUI | LWR | ENT |   | SPC | RSE  | ALT |
                        bindings = <
&kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P &kp BSPC
&none   &bh 3 A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K &kp L   &kp SQT &none
&none   &mt LSHFT Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &mt RSHFT FSLH &none
        &kp LGUI &bh 1 HOME &mt LCTRL RET   &kp SPACE &bh 2 END &mt RALT LG(V)
                        >;

		label = "BOSS";
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | BT1 | BT2 | BT3 | BT4 | BT5 |   |  7  |  8  |  9  | DEL | BSPC|
// |  F2 |  F3 |  F4 |  F5 |  F6 |   |  4  |  5  |  6  | PGU | PGD |
// |  F7 |  F8 |  F10|  F11|  F12|   |  1  |  2  |  3  | BSL | CTRL/ENT |
//                    | CAS |     | Alt;Ent |   | Ctrl;F1 |  0  | shift;. |
                        bindings = <
&none   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR     &kp PG_UP &kp N7 &kp N8 &kp N9 &kp BSPC  &none
&none   &kp F2       &hm LCTRL F3  &hm LSHFT F4  &hm LALT F5  &kp F6         &kp PG_DN &kp N4 &kp N5 &kp N6 &kp BSLH &none
&none   &kp F7       &kp F8       &kp F10      &kp F11      &kp F12        &kp RET &kp N1 &kp N2 &kp N3  &kp LC(RET) &none
               	        &kp LC(LA(LSHFT)) &trans       &mt RALT RET      &mt LCTRL F1  &kp N0  &mt LSHFT DOT
                        >;
		label = "Numbers";
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&none   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT             &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR  &none
&none   &kp TAB   &kp CAPS &kp F13   &out OUT_TOG &kp LGUI      &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &kp PIPE &none
&none   &kp ESC   &kp GRAVE &trans   &kp F9   &kp F17             &kp UNDER &kp PLUS  &kp LBKT &kp RBKT &kp BSLH &none
        	     &kp LCTRL &kp LALT   &mt LSHFT LS(INS)   &kp RET   &trans    &mt RALT TILDE
                        >;

		label = "Symbols";
		};
		
		danger_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
&kp TAB   &bootloader  &kp AT &kp HASH &kp DLLR &kp SLCK              &kp C_VOL_UP &trans  &trans &trans &kp DQT &none
&none   &trans   &trans &kp LC(LSHFT)  &mt LSHFT UP   &kp PSCRN   &kp C_VOL_DN &trans &trans        &kp UP &kp SEMI &none
&none   &kp LNLCK   &kp QMARK &kp LEFT &kp DOWN &kp RIGHT              &kp C_MUTE &trans  &kp LEFT        &kp DOWN &kp RIGHT &none
        	     &kp LG(Z) &kp LG(X)   &kp LG(C)   &kp LC(LA(W))   &kp LC(LA(P))    &kp LC(LA(R))
                        >;

                label = "**DANGER**";
		};
        };
};
